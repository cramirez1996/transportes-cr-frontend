#!/bin/bash
# Git Initialization Script for Frontend (Bash version)
# Run this script from the frontend directory to initialize Git and push to GitHub

echo "üöÄ Inicializando repositorio Git para Frontend..."
echo ""

# Check if we're in the frontend directory
if [ ! -f "package.json" ]; then
    echo "‚ùå Error: Debes ejecutar este script desde el directorio frontend/"
    exit 1
fi

# Check if git is installed
if ! command -v git &> /dev/null; then
    echo "‚ùå Error: Git no est√° instalado. Inst√°lalo primero."
    exit 1
fi

# Check if gh CLI is installed
if ! command -v gh &> /dev/null; then
    echo "‚ùå Error: GitHub CLI (gh) no est√° instalado."
    echo "   Inst√°lalo desde: https://cli.github.com/"
    exit 1
fi

# Check if gh is authenticated
if ! gh auth status &> /dev/null; then
    echo "‚ö†Ô∏è  GitHub CLI no est√° autenticado"
    echo "   Ejecutando autenticaci√≥n..."
    gh auth login
fi

# Initialize Git if not already initialized
if [ ! -d ".git" ]; then
    echo "üì¶ Inicializando repositorio Git..."
    git init
    echo "‚úÖ Git inicializado"
else
    echo "‚ÑπÔ∏è  Repositorio Git ya inicializado"
fi

# Check if remote exists
if ! git remote get-url origin &> /dev/null; then
    echo ""
    echo "üîó Creando repositorio en GitHub..."
    echo ""
    
    # Create GitHub repository
    if gh repo create transportes-cr-frontend --public --source=. --remote=origin --description="Sistema de Control - Transportes CR (Frontend)"; then
        echo "‚úÖ Repositorio creado: transportes-cr-frontend"
        echo "‚úÖ Remote configurado autom√°ticamente"
    else
        echo "‚ùå Error al crear el repositorio"
        echo ""
        echo "Opciones:"
        echo "1. El repositorio ya existe - Configura el remote manualmente:"
        echo "   git remote add origin https://github.com/cramirez1996/transportes-cr-frontend.git"
        echo ""
        echo "2. Problemas de autenticaci√≥n - Ejecuta:"
        echo "   gh auth login"
        exit 1
    fi
else
    remote_url=$(git remote get-url origin)
    echo "‚ÑπÔ∏è  Remote ya configurado: $remote_url"
fi

# Add all files
echo ""
echo "üìù Agregando archivos al staging area..."
git add .

# Show status
echo ""
echo "üìä Estado del repositorio:"
git status --short

# Commit
echo ""
echo "üíæ Creando commit inicial..."
git commit -m "feat: initial commit - Frontend deployment setup

- Configuraci√≥n de ambiente de producci√≥n (https://api.transportescchr.cl/api)
- GitHub Actions workflow para deploy a S3 + CloudFront
- CloudFront Distribution: E37NHHZ8PFOAQC
- Bucket S3: app.transportescchr.cl
- Documentaci√≥n completa de deployment
- Pol√≠ticas IAM para AWS"

echo "‚úÖ Commit creado exitosamente"

# Check current branch
current_branch=$(git branch --show-current)

if [ "$current_branch" != "main" ] && [ "$current_branch" != "master" ]; then
    echo ""
    echo "‚ö†Ô∏è  Rama actual: $current_branch"
    echo "El workflow est√° configurado para main/master"
    
    read -p "¬øQuieres renombrar la rama a 'main'? (s/n): " response
    if [ "$response" = "s" ] || [ "$response" = "S" ]; then
        git branch -M main
        echo "‚úÖ Rama renombrada a 'main'"
        current_branch="main"
    fi
fi

# Push to remote
if git remote get-url origin &> /dev/null; then
    echo ""
    read -p "üöÄ ¬øQuieres hacer push al repositorio remoto ahora? (s/n): " push_now
    
    if [ "$push_now" = "s" ] || [ "$push_now" = "S" ]; then
        echo ""
        echo "üì§ Haciendo push a origin/$current_branch..."
        
        if git push -u origin "$current_branch"; then
            echo ""
            echo "‚úÖ Push exitoso!"
            echo ""
            echo "üéâ ¬°Repositorio configurado correctamente!"
            echo ""
            echo "üìã Pr√≥ximos pasos:"
            echo "  1. Ve a GitHub ‚Üí Settings ‚Üí Secrets and variables ‚Üí Actions"
            echo "  2. Configura los siguientes secrets:"
            echo "     - AWS_ACCESS_KEY_ID"
            echo "     - AWS_SECRET_ACCESS_KEY"
            echo "     - AWS_REGION (us-east-1)"
            echo "     - S3_BUCKET (app.transportescchr.cl)"
            echo "     - CLOUDFRONT_DISTRIBUTION_ID (E37NHHZ8PFOAQC)"
            echo ""
            echo "  3. ‚ö†Ô∏è  IMPORTANTE: Usa NUEVAS credenciales AWS"
            echo ""
            echo "  4. El workflow se ejecutar√° autom√°ticamente en cada push"
            echo ""
            echo "üìö Ver documentaci√≥n completa en DEPLOYMENT.md"
        else
            echo ""
            echo "‚ùå Error al hacer push"
            echo ""
            echo "Intenta hacer push manualmente:"
            echo "  git push -u origin $current_branch"
        fi
    else
        echo ""
        echo "‚ÑπÔ∏è  Push omitido. Puedes hacerlo despu√©s con:"
        echo "   git push -u origin $current_branch"
        echo ""
        echo "üìã No olvides configurar GitHub Secrets despu√©s:"
        echo "  - AWS_ACCESS_KEY_ID"
        echo "  - AWS_SECRET_ACCESS_KEY"
        echo "  - AWS_REGION (us-east-1)"
        echo "  - S3_BUCKET (app.transportescchr.cl)"
        echo "  - CLOUDFRONT_DISTRIBUTION_ID (E37NHHZ8PFOAQC)"
    fi
fi

echo ""
echo "‚úÖ Script completado"
echo ""
